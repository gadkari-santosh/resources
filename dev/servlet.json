[{"id":1,"description":"Which of the following interprets html code and renders webpages to user?","explaination":"A browser is a software application used to locate, retrieve and display content on the World Wide Web, including Web pages, images, video and other files. As a client/server model, the browser is the client run on a computer that contacts the Web server and requests information. The Web server sends the information back to the Web browser which displays the results on the computer or other Internet-enabled device that supports a browser.","options":[{"id":1,"text":"Client"},{"id":2,"text":"Server"},{"id":3,"text":"Browser"},{"id":4,"text":""},{"id":5,"text":""}],"answer":[3]},{"id":2,"description":"Which html tag can be used to send the request to servlet?","explaination":"The <form> tag is used to create an HTML form for user input. This tag can be used to send request to server. action is an attribute of form tag which specifies url. <input> tag is used to provide input elements in form like textbox. ","options":[{"id":1,"text":"<action>"},{"id":2,"text":"<form>"},{"id":3,"text":"<input>"},{"id":4,"text":"all of these"},{"id":5,"text":""}],"answer":[2]},{"id":3,"description":"Html is part of httprequest, Is it true or false?","explaination":"","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":4,"description":"Which http method send by browser that asks the server to get the page only?","explaination":"GET requests a representation of the specified resource. Requests using GET should only retrieve data and should have no other effect. ","options":[{"id":1,"text":"GET"},{"id":2,"text":"POST"},{"id":3,"text":"OPTION"},{"id":4,"text":"PUT"},{"id":5,"text":"TRACE"}],"answer":[1]},{"id":5,"description":"Which http method send by browser that gives the server what user data typed in the form?","explaination":"POST requests that the server accept the entity enclosed in the request as a new subordinate of the web resource identified by the URI. The data POSTed might be, as examples, an annotation for existing resources; a message for a bulletin board, newsgroup, mailing list, or comment thread; a block of data that is the result of submitting a web form to a data-handling process; or an item to add to a database.","options":[{"id":1,"text":"PUT"},{"id":2,"text":"POST"},{"id":3,"text":"GET"},{"id":4,"text":"TRACE"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":6,"description":"How to send data in get method?","explaination":"Browser can send request to server using Get or Post method. In Get method data or parameters are passed as part of url. In Post method, data or parameters are passed as a part of HTTP message.","options":[{"id":1,"text":"We cant"},{"id":2,"text":"Through url"},{"id":3,"text":"Through payload"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":7,"description":"When we are sending data in URL in get method, how to separate separate path and parameter?","explaination":"","options":[{"id":1,"text":"By ;"},{"id":2,"text":"By ?"},{"id":3,"text":"By &"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":8,"description":"What is full form of MIME type?","explaination":"Multipurpose Internet Mail Extensions (MIME) is an Internet standard that extends the format of email to support:\n-Text in character sets other than ASCII\n-Non-text attachments\n-Message bodies with multiple parts\n-Header information in non-ASCII character sets","options":[{"id":1,"text":"Mail Interface Multiple Extensions"},{"id":2,"text":"Mail Internet Multiple Extensions"},{"id":3,"text":"Multipurpose Internet Mail Extensions"},{"id":4,"text":"Multipurpose Interface Mail Extensions"},{"id":5,"text":""}],"answer":[3]},{"id":9,"description":"What is true about MIME Type?","explaination":"","options":[{"id":1,"text":"It tells the browser what type of data browser will send"},{"id":2,"text":"It tells the browser what type of data browser will receive"},{"id":3,"text":"It tells the server what type of data server will receive"},{"id":4,"text":"It tells the server what type of data server will send"},{"id":5,"text":""}],"answer":[2]},{"id":10,"description":"What is the nature of HTML page ?","explaination":"","options":[{"id":1,"text":"Dynamic"},{"id":2,"text":"Static"},{"id":3,"text":"Static and Dynamic"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":11,"description":"Web server serves only static page, true or false?","explaination":"","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":12,"description":"Which tag doesn't belongs to web.xml?","explaination":"Following are deployment descriptor elements defined in the web.xml file under the root element <web-app>:\n\ncontext-param\ndescription\ndisplay-name\ndistributable\nejb-ref\nejb-local-ref\nenv-entry\nerror-page\nfilter\nfilter-mapping\nicon\nlistener\nlogin-config\nmime-mapping\nresource-env-ref\nresource-ref\nsecurity-constraint\nsecurity-role\nservlet\nservlet-mapping\nsession-config\ntaglib\nwelcome-file-list","options":[{"id":1,"text":"<web-app>"},{"id":2,"text":"<welcome-file-list>"},{"id":3,"text":"<servlet>"},{"id":4,"text":"<servlet-mappings>"},{"id":5,"text":""}],"answer":[4]},{"id":13,"description":"When we are sending data in URL in get method, how to separate  parameters?","explaination":"","options":[{"id":1,"text":"By ,"},{"id":2,"text":"By ;"},{"id":3,"text":"By ?"},{"id":4,"text":"By &"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":14,"description":"In which folder we can put web.xml?","explaination":"","options":[{"id":1,"text":"classes"},{"id":2,"text":"package"},{"id":3,"text":"WEB-INF"},{"id":4,"text":"META-INF"},{"id":5,"text":""}],"answer":[3]},{"id":15,"description":"In which folder we can put jar files?","explaination":"","options":[{"id":1,"text":"classes"},{"id":2,"text":"library"},{"id":3,"text":"lib"},{"id":4,"text":"WEB-INF"},{"id":5,"text":""}],"answer":[3]},{"id":16,"description":"Who does control life-cycle of a servlet?","explaination":"A servlet container is nothing but a compiled, executable program. The main function of the container is to load, initialize and execute servlets.\n\nA container handles large number of requests as it can hold many active servlets, listeners etc. It is interesting to note here that the container and the objects in a container are multithreaded. So each object must be thread safe in a container as the multiple requests are being handled by the container due to the entrance of more than one thread to an object at a time.\n\nFollowing steps a servlet container does for each HTTP request for a servlet, in general :\n\n- The servlet container loads the servlet class and calls the init method of the servlet as soon as the servlet is called for the first time.\n- Then this container makes an instance of javax.servlet.ServletRequest and javax.servlet.ServletResponse for each request.\n- Then it passes the ServletRequest and ServletResponse objects by invoking the servlet's service method.\n- Finally, it calls the destroy method and unload the servlet class when the servlet class is to be shut down.","options":[{"id":1,"text":"Browser"},{"id":2,"text":"Client"},{"id":3,"text":"Container"},{"id":4,"text":"User"},{"id":5,"text":""}],"answer":[3]},{"id":17,"description":"Which tag of deployment descriptor maps internal name of servlet to fully qualified class name?","explaination":"The servlet element contains the declarative data of a servlet. <servlet-class> element can be defined under <servlet> tag which maps servlet to fully qualified class name.\n\nFor Example,\n\n<servlet>\n   <servlet-name>MyServlet</servlet-name>\n   <servlet-class>com.test.mytest.MyServlet</servlet-class>\n</servlet>","options":[{"id":1,"text":"<servlet>"},{"id":2,"text":"<servlet-mapping>"},{"id":3,"text":"<web-app>"},{"id":4,"text":"<servlet-mappings>"},{"id":5,"text":""}],"answer":[1]},{"id":18,"description":"Which tag of deployment descriptor maps internal name of servlet to public URL pattern?","explaination":"The servlet-mapping element defines a mapping between a servlet and a URL pattern. <servlet-name> and <url-pattern> elements are used to specify this mapping.\n\nFor Example,\n<servlet-mapping>\n   <servlet-name>MyServlet</servlet-name>\n   <url-pattern>*.action</url-pattern>\n<servlet-mapping>","options":[{"id":1,"text":"<servlet>"},{"id":2,"text":"<servlet-mappings>"},{"id":3,"text":"<servlet-mapping>"},{"id":4,"text":"<web-app>"},{"id":5,"text":""}],"answer":[3]},{"id":19,"description":"Which life-cycle method make ready the servlet for garbage collection?","explaination":"The destroy() method is called only once at the end of the life cycle of a servlet. This method gives your servlet a chance to close database connections, halt background threads, write cookie lists or hit counts to disk, and perform other such cleanup activities.\n\nAfter the destroy() method is called, the servlet object is marked for garbage collection.","options":[{"id":1,"text":"init"},{"id":2,"text":"service"},{"id":3,"text":"System.gc"},{"id":4,"text":"destroy"},{"id":5,"text":""}],"answer":[4]},{"id":20,"description":"Which life cycle method is  called  once in the servlet life?","explaination":"The init method is designed to be called only once. It is called when the servlet is first created, and not called again for each user request. So, it is used for one-time initializations, just as with the init method of applets.\n\nThe servlet is normally created when a user first invokes a URL corresponding to the servlet, but you can also specify that the servlet be loaded when the server is first started.\n\nWhen a user invokes a servlet, a single instance of each servlet gets created, with each user request resulting in a new thread that is handed off to doGet or doPost as appropriate. The init() method simply creates or loads some data that will be used throughout the life of the servlet.","options":[{"id":1,"text":"class_loading"},{"id":2,"text":"init"},{"id":3,"text":"service"},{"id":4,"text":"destory"},{"id":5,"text":""}],"answer":[2]},{"id":21,"description":"Which method of Servlet is called when client request arrives?","explaination":"The service() method is the main method to perform the actual task. The servlet container (i.e. web server) calls the service() method to handle requests coming from the client( browsers) and to write the formatted response back to the client.\n\nEach time the server receives a request for a servlet, the server spawns a new thread and calls service. The service() method checks the HTTP request type (GET, POST, PUT, DELETE, etc.) and calls doGet, doPost, doPut, doDelete, etc. methods as appropriate","options":[{"id":1,"text":"get"},{"id":2,"text":"post"},{"id":3,"text":"init"},{"id":4,"text":"service"},{"id":5,"text":""}],"answer":[4]},{"id":22,"description":"Which method doesn't exists in HttpServlet Class?","explaination":"As per javax.servlet library, HttpServlet class extends an abstract class GenericServlet which implements Servlet Interface. GenericServlet provides implementation for init() method. This method is inherited by HttpServlet class. HttpServlet class provides support for doXXX() and service() methods.","options":[{"id":1,"text":"service()"},{"id":2,"text":"init()"},{"id":3,"text":"doGet()"},{"id":4,"text":"doPost()"},{"id":5,"text":""}],"answer":[2]},{"id":23,"description":"Which of the following interface contain servlet life-cycle methods?","explaination":"As per javax.servlet library, Servlet is an interface. GenericServlet and HttpServlet are abstract classes which implements this interface. Service is an method from Servlet interface.","options":[{"id":1,"text":"HttpServlet"},{"id":2,"text":"Servlet"},{"id":3,"text":"GenericServlet"},{"id":4,"text":"Service"},{"id":5,"text":""}],"answer":[2]},{"id":24,"description":"Which of this life-cycle method you can over-ride in your class?","explaination":"As per inheritance model supported by java, all classes which implements Servlet interface or extends GenericServlet or HttpServlet class can override all servlet life cycle methods.","options":[{"id":1,"text":"init()"},{"id":2,"text":"service()"},{"id":3,"text":"doGet()"},{"id":4,"text":"All of these"},{"id":5,"text":""}],"answer":[4]},{"id":25,"description":"Which statement is not true about ServletContext?","explaination":"ServletContext defines a set of methods that a servlet uses to communicate with its servlet container, for example, to get the MIME type of a file, dispatch requests, or write to a log file.\n\nThere is one context per \"web application\" per Java Virtual Machine. (A \"web application\" is a collection of servlets and content installed under a specific subset of the server's URL namespace such as /catalog and possibly installed via a .war file.)\n\nIn the case of a web application marked \"distributed\" in its deployment descriptor, there will be one context instance for each virtual machine. In this situation, the context cannot be used as a location to share global information (because the information won't be truly global). Use an external resource like a database instead.\n\nThe ServletContext object is contained within the ServletConfig object, which the Web server provides the servlet when the servlet is initialized.","options":[{"id":1,"text":"There is one ServletContext per one application"},{"id":2,"text":"Generally it is used to get web app parameters"},{"id":3,"text":"We can get Server Information though it"},{"id":4,"text":"There is one ServletContext per one servlet"},{"id":5,"text":""}],"answer":[1]},{"id":26,"description":"Which http methods are idempotent?","explaination":"An idempotent HTTP method is a HTTP method that can be called many times without different outcomes. It would not matter if the method is called only once, or ten times over. The result should be the same. \n\nFollowing HTTP methods are idempotent; GET, OPTIONS, HEAD, PUT, DELETE","options":[{"id":1,"text":"GET"},{"id":2,"text":"POST"},{"id":3,"text":"OPTIONS"},{"id":4,"text":"TRACE"},{"id":5,"text":"PATCH"}],"answer":[1,3,4]},{"id":27,"description":"If you are not putting method name in your form tag, what is the default method?","explaination":"method attribute of form element specifies which HTTP method to use while sending data. If method name is not provided by default get method is used.","options":[{"id":1,"text":"Get"},{"id":2,"text":"Post"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":28,"description":"Which methods decides to call doXXX based on HTTP request.","explaination":"The service() method is the main method to perform the actual task. The servlet container (i.e. web server) calls the service() method to handle requests coming from the client( browsers) and to write the formatted response back to the client.\n\nEach time the server receives a request for a servlet, the server spawns a new thread and calls service. The service() method checks the HTTP request type (GET, POST, PUT, DELETE, etc.) and calls doGet, doPost, doPut, doDelete, etc. methods as appropriate","options":[{"id":1,"text":"doOption()"},{"id":2,"text":"doTrace()"},{"id":3,"text":"doMethod()"},{"id":4,"text":"service"},{"id":5,"text":""}],"answer":[4]},{"id":29,"description":"What do you mean by reponse.addHeader(\"xyz\", \"abc\"); ?","explaination":"addHeader method of HttpServletResponse adds a response header with the given name and value. This method allows response headers to have multiple values.","options":[{"id":1,"text":"Add a new header with new value"},{"id":2,"text":"Add a new header if that is not existing, otherwise replace the value\r\n"},{"id":3,"text":"Only change the value of older header"},{"id":4,"text":"Add a new header and value or add an additional value to exiting header"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":30,"description":"What is the meaning of response.setHeader(\"xyz\", \"abc\");","explaination":"setHeader method of HttpServletResponse sets a response header with the given name and value. If the header had already been set, the new value overwrites the previous one. The containsHeader method can be used to test for the presence of a header before setting its value.","options":[{"id":1,"text":"Add a new header and value"},{"id":2,"text":"Add an additional value to exiting header"},{"id":3,"text":"Add a new header and value or add an additional value to exiting header"},{"id":4,"text":"Add a new header if that is not existing, otherwise replace the value"},{"id":5,"text":"Add new header and value always"}],"answer":[4]},{"id":31,"description":"What is the meaning of response.setIntHeader(\"xyz\" ,67); ?","explaination":"setIntHeader method of HttpServletResponse sets a response header with the given name and integer value. If the header had already been set, the new value overwrites the previous one. The containsHeader method can be used to test for the presence of a header before setting its value.","options":[{"id":1,"text":"Add a new header with integer value"},{"id":2,"text":"Replace the value to integer to existing header"},{"id":3,"text":"Replace the value to integer to existing header or Add a new header with integer value"},{"id":4,"text":"Always add a new header\r\n"},{"id":5,"text":""}],"answer":[3]},{"id":32,"description":"Which of these  method always sends a header back to the client/browser to get the desire page?","explaination":"A redirect is a two step process, where the web application instructs the browser to fetch a second URL, which differs from the original. A browser reload of the second URL will not repeat the original request, but will rather fetch the second URL.Redirect is marginally slower than a forward, since it requires two browser requests, not one. Objects placed in the original request scope are not available to the second request.","options":[{"id":1,"text":"Forward"},{"id":2,"text":"Redirect"},{"id":3,"text":"Both of these"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":33,"description":"Which method redirect to resources to different servers internally?","explaination":"A forward is performed internally by the servlet. The browser is completely unaware that it has taken place, so its original URL remains intact.Any browser reload of the resulting page will simple repeat the original request, with the original URL.","options":[{"id":1,"text":"Forward"},{"id":2,"text":"Redirect"},{"id":3,"text":"Both of these"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[1]},{"id":34,"description":"Which method take a string as input parameter and not a URL?","explaination":"void sendRedirect(java.lang.String location) throws java.io.IOException\n\nSends a temporary redirect response to the client using the specified redirect location URL and clears the buffer. The buffer will be replaced with the data set by this method. Calling this method sets the status code to SC_FOUND 302 (Found). This method can accept relative URLs;the servlet container must convert the relative URL to an absolute URL before sending the response to the client. If the location is relative without a leading '/' the container interprets it as relative to the current request URI. If the location is relative with a leading '/' the container interprets it as relative to the servlet container root.\n\n","options":[{"id":1,"text":"sendRedirect"},{"id":2,"text":"Forward"},{"id":3,"text":"None of these"},{"id":4,"text":"Both"},{"id":5,"text":""}],"answer":[1]},{"id":35,"description":"Can you call sendRedirect after response is committed?","explaination":"If the response has already been committed, sendRedirect method throws an IllegalStateException. After using this method, the response should be considered to be committed and should not be written to.","options":[{"id":1,"text":"Yes"},{"id":2,"text":"No"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[2]},{"id":36,"description":"Which method shows the client what server is receiving?","explaination":"A TRACE returns the headers sent with the TRACE request to the client, so that they can be used in debugging. ","options":[{"id":1,"text":"doGet"},{"id":2,"text":"doPost"},{"id":3,"text":"doTrace"},{"id":4,"text":"doOption"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":37,"description":"Get is faster that Post method. True or false.?","explaination":"","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":38,"description":"When init parameters of servlet are read by container?","explaination":"The servlet container calls init(ServletConfig config) method once servlet is initialized. ServletConfig object contains servlet configuration and initialization parameters. ","options":[{"id":1,"text":"When container starts"},{"id":2,"text":"When doGet/doPost methods are called"},{"id":3,"text":"When servlet is initialized"},{"id":4,"text":"When servlet constructor is called."},{"id":5,"text":""}],"answer":[3]},{"id":39,"description":"How many characters we can send though doGet()?","explaination":"","options":[{"id":1,"text":"1024"},{"id":2,"text":"1048"},{"id":3,"text":"1082"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[1]},{"id":40,"description":"Through which tag you can define servlet context  in web.xml?","explaination":"The optional context-param element contains the declaration of a Web application's servlet context initialization parameters. \n\nExample,\n\n<context-param>\n    <param-name>name</param-name>\n    <param-value>Joe</param-value>\n  </context-param>\n  <context-param>\n    <param-name>password</param-name>\n    <param-value>password</param-value>\n  </context-param>","options":[{"id":1,"text":"<config-param>"},{"id":2,"text":"<context-param>"},{"id":3,"text":"<init-param>"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":41,"description":"Through which tag you can define servlet config  in web.xml?","explaination":"<init-param> Contains a name/value pair as an initialization attribute of the servlet. One should use a separate set of <init-param> tags for each attribute.\n\nFor example,\n\n<servlet>\n    <servlet-name>ParameterServlet</servlet-name>\n    <servlet-class>ParameterServlet</servlet-class>\n    <init-param>\n      <param-name>name</param-name>\n      <param-value>Joe</param-value>\n    </init-param>\n    <init-param>\n      <param-name>password</param-name>\n      <param-value>password</param-value>\n    </init-param>\n  </servlet>","options":[{"id":1,"text":"<config-param>"},{"id":2,"text":"<context-param>"},{"id":3,"text":"<init-param>"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[3]},{"id":42,"description":"Servlet is a stand-alone java application , true or false?","explaination":"The servlet is a Java programming language class used to extend the capabilities of a server. Although servlets can respond to any types of requests, they are commonly used to extend the applications hosted by web servers, so they can be thought of as Java applets that run on servers instead of in web browsers.","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[2]},{"id":43,"description":"Can you run a servlet in application server?","explaination":"","options":[{"id":1,"text":"Yes"},{"id":2,"text":"No"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":44,"description":"In which folder of tomcat you have to put your web application?","explaination":"","options":[{"id":1,"text":"webapp"},{"id":2,"text":"web-app"},{"id":3,"text":"webapps"},{"id":4,"text":"web-apps"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":45,"description":"In which file do we define a servlet mapping? ","explaination":"web.xml is also known as deployment descriptor is used to define servlet mappings.","options":[{"id":1,"text":"web.xml"},{"id":2,"text":"servlet.mapping"},{"id":3,"text":"servlet.xml"},{"id":4,"text":"Mapping.java"},{"id":5,"text":"None of these"}],"answer":[1]},{"id":46,"description":"Given the following servlet mapping definition for the web application named 'secureapp',\n\n<code>\n<servlet>\n  <servlet-name>ProcessLoginData</servlet-name>\n  <servlet-class>DoLogin</servlet-class>\n</servlet>\n\n<servlet-mapping>\n  <servlet-name>ProcessLoginData</servlet-name>\n  <url-pattern>do/Login</url-pattern>\n</servlet-mapping>\n</code>\n\nwhich of the following URLs will correctly request the Servlet? ","explaination":"<url-pattern> tag describes a pattern used to resolve URLs. The portion of the URL after the http://host:port + WebAppName is compared to the <url-pattern> by web server. If the patterns match, the servlet mapped in this element will be called. Hence http://www.mywebapp.com/secureapp/do/Login?name=\"bob\" will correctly request DoLogin servlet class.","options":[{"id":1,"text":"http://www.mywebapp.com/secureapp/Login?name=\"bob\" "},{"id":2,"text":"http://www.mywebapp.com/Login?name=\"bob\" "},{"id":3,"text":"http://www.mywebapp.com/secureapp/doLogin?name=\"bob\" "},{"id":4,"text":"http://www.mywebapp.com/secureapp/do/Login?name=\"bob\""},{"id":5,"text":"None of these"}],"answer":[4]},{"id":47,"description":"How can we get context init parameter and run some code before rest of the application can service a client? ","explaination":"ServletContextListener receives notification for any changes in servlet context. This listener is called when context is initialized or destroyed. In order to receive context init parameter before application can service client, one should do following steps.\n\n1. Write a new class implementing ServletContextListener interface. Example, com.test.MyListener\n2. Implement contextInitialized and contextDestroyed methods in MyListener class\n3. Add following mapping to web.xml to activate listener\n\n<web-app ...>\n\t<listener>\n\t\t<listener-class>com.test.MyListener</listener-class>\n\t</listener>\n</web-app>","options":[{"id":1,"text":"ServletContextAttributeListener"},{"id":2,"text":"ServletContextListener"},{"id":3,"text":"HttpSessionListener"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":48,"description":"If you want to track active session or how many users are there? So which listener you should use.","explaination":"HttpSessionListener receives notification for any Http session life cycle changes. This listener is called when new session is created or existing session is destroyed. In order to receive context init parameter before application can service client, one should do following steps.\n\n1. Write a new class implementing HttpSessionListener interface. Example, com.test.MyListener\n2. Implement sessionCreated and sessionDestroyed methods in MyListener class\n3. Add following mapping to web.xml to activate listener\n\n<web-app ...>\n\t<listener>\n\t\t<listener-class>com.test.MyListener</listener-class>\n\t</listener>\n</web-app>","options":[{"id":1,"text":"ServletRequestListener"},{"id":2,"text":"ServletContextListener"},{"id":3,"text":"HttpSessionListener"},{"id":4,"text":"HttpSessionBindingListener"},{"id":5,"text":""}],"answer":[3]},{"id":49,"description":"Suppose you want to know each time request comes in, so that you can log it. Which listener is appropriate for that?","explaination":"ServletRequestListener is for receiving notification events about requests coming into and going out of scope of a web application.","options":[{"id":1,"text":"ServletRequestListener"},{"id":2,"text":"ServletRequestAttributeListener"},{"id":3,"text":"ServletContextListener"},{"id":4,"text":"HttpRequestListener"},{"id":5,"text":"None of these"}],"answer":[1]},{"id":50,"description":"If you want to know when a request attribute has removed,added or replace, then which listener is the appropriate one?","explaination":"ServletRequestAttributeListener is for receiving notification events about ServletRequest attribute changes.","options":[{"id":1,"text":"ServletRequestListener"},{"id":2,"text":"ServletRequestAttributeListener"},{"id":3,"text":"ServletRequestEventListener"},{"id":4,"text":"HttpRequestListener\r\n"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":51,"description":"Which listener should use to find context has been created or destroyed?","explaination":"ServletContextListener receives notification for any changes in servlet context. This listener is called when context is initialized or destroyed. ","options":[{"id":1,"text":"ServletContextListener"},{"id":2,"text":"ServletContextAttributeListener"},{"id":3,"text":"HttpContextListener"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[1]},{"id":52,"description":"Which Listener you should use , when you want to know session attribute has added,removed or repalced?","explaination":"HttpSessionAttributeListener is for receiving notification events about Http session attribute changes.","options":[{"id":1,"text":"HttpSessionListener"},{"id":2,"text":"HttpSessionBindingListener"},{"id":3,"text":"HttpSessionAttributeListener"},{"id":4,"text":"HttpSessionActivationListener"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":53,"description":"You have an attribute class, and you want object of this type should be notified when they are bound to or removed from a session. So which listener is appropriate one?","explaination":"HttpSessionBindingListener notifies an object when it is bounded to or unbounded from http session. The object is notified using HttpSessionBindingEvent object.","options":[{"id":1,"text":"HttpSessionBindingListener"},{"id":2,"text":"HttpSessionAttributeListener"},{"id":3,"text":"HttpSessionListener"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[1]},{"id":54,"description":"Which one is required as a sub-element of tag  in deployment descriptor?","explaination":"","options":[{"id":1,"text":"<listener-type>"},{"id":2,"text":"<listener-name>"},{"id":3,"text":"<listener-class>"},{"id":4,"text":"<listener-scope>"},{"id":5,"text":"None of the above"}],"answer":[3]},{"id":55,"description":"By which tag you can pre-initialise a servlet?","explaination":"<load-on-startup> element of initializes the servlet on server startup. Value of this element must be positive integer indicating the order in which servlet should be loaded. Lower integers are loaded before higher integers. If no value is specified or if value is not a positive integer, server can load this servlet in any order during application startup.","options":[{"id":1,"text":"<init-param>1<init-param>"},{"id":2,"text":"<init>1<init>"},{"id":3,"text":"<load-on-startup>1</load-on-startup>"},{"id":4,"text":"<load-on-start>1</load-on-start>"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":56,"description":"What are the true sentences about Session-Id?","explaination":"","options":[{"id":1,"text":"Session-IDs are usually stored in the cookies, URLs and hidden fields of Web pages."},{"id":2,"text":"A session-ID is a unique identification"},{"id":3,"text":"It is transmitted between the client and the server"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":57,"description":"Which of the following is not a mechanism used for session tracking?","explaination":"When there is a series of continuous request and response from a same client to a server, the server cannot identify from which client it is getting requests. Because HTTP is a stateless protocol.\n\nWhen there is a need to maintain the conversational state, session tracking is needed. For example, in a shopping cart application a client keeps on adding items into his cart using multiple requests. When every request is made, the server should identify in which client’s cart the item is to be added. So in this scenario, there is a certain need for session tracking.\n\nSolution is, when a client makes a request it should introduce itself by providing unique identifier every time. There are five different methods to achieve this.\n\n- User authorization\n- Hidden field\n- URL rewriting\n- Cookies\n- Session tracking API","options":[{"id":1,"text":"Cookies"},{"id":2,"text":"RequestDispatcher"},{"id":3,"text":"URL rewritting"},{"id":4,"text":"SSL Session"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":58,"description":"Which statement is true about HttpServlet?","explaination":"","options":[{"id":1,"text":"This is an abstract class"},{"id":2,"text":"HttpServlet extends GenericServlet and adds support for doGet(), doPost()"},{"id":3,"text":"Service method defined here only take http specific request"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":59,"description":"What are the new features added in Servlet 2.5? Choose correct answers.","explaination":"","options":[{"id":1,"text":"Support for annotations"},{"id":2,"text":"Several web.xml conveniences"},{"id":3,"text":"Loading the class"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":60,"description":"Servlet interface contains LifeCycle methods . True or false?","explaination":"","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":61,"description":"What are the correct statements about filter?","explaination":"","options":[{"id":1,"text":"It checks Security"},{"id":2,"text":"It modifies the request or response"},{"id":3,"text":"It is used for Logging and auditing"},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":62,"description":"My application has a servlet, which do addition as shown on given values and sets the value in context scope. It then prints the result.\n\n<code>\nPrintWriter out=response.getWriter();\nparam1 = request.getParameter(\"Param1\");\nparam2 = request.getParameter(\"Param2\");\ngetServletContext.setAttribute(\"result\",(param1 + param2));\nresponse.out.print(\"Result ==\"+getServletContext.getAttribute(\"result\"));\n</code>\n\nBut sometimes I get wrong results. What do you think might be the reason?","explaination":"There is only one SevletContext available per application. As result attribute is being set in context, result would go wrong if many clients are accessing same servlet.","options":[{"id":1,"text":"The client must be disoperating the servlet call"},{"id":2,"text":"The request attributes set are -ve numbers"},{"id":3,"text":"Many clients must be accessing the servlet"},{"id":4,"text":"The setAttribute method is not written properly."},{"id":5,"text":""}],"answer":[3]},{"id":63,"description":"To send binary output in a response, the following method of HttpServletResponse may be used to get the appropriate Writer/Stream object. ","explaination":"getOutputStream method of HttpServletResponse returns a ServletOutputStream suitable for writing binary data in the response. The servlet container does not encode the binary data.","options":[{"id":1,"text":"getStream"},{"id":2,"text":"getOutputStream"},{"id":3,"text":"getBinaryStream"},{"id":4,"text":"getWriter"},{"id":5,"text":"All of these"}],"answer":[2]},{"id":64,"description":"To send text output in a response, the following method of HttpServletResponse may be used to get the appropriate Writer/Stream object. Select the one correct answer.","explaination":"getWriter method of HttpServletResponse returns a PrintWriter object that can send character text to the client. The PrintWriter uses the character encoding returned by getCharacterEncoding(). If the response's character encoding has not been specified as described in getCharacterEncoding (i.e., the method just returns the default value ISO-8859-1), getWriter updates it to ISO-8859-1.","options":[{"id":1,"text":"getStream"},{"id":2,"text":"getOutputStream"},{"id":3,"text":"getText"},{"id":4,"text":"getWriter"},{"id":5,"text":"All of these"}],"answer":[4]},{"id":65,"description":"Which of the following methods can be used to get information about parameters applied to entire application?","explaination":"Servlet context is only one for entire application. Hence in order to get paramater information applied to entire application one should call, ServletContext.getInitParameterNames().","options":[{"id":1,"text":"ServletConfig.getParameter();"},{"id":2,"text":"ServletContext.getAttributeNames();"},{"id":3,"text":"ServletContext.getParameterNames();"},{"id":4,"text":"ServletContext.getInitParameterNames();"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":66,"description":"I have an attribute class \n\n<code>\nClass User{\nString name;\nString address;\nString phoneNo;\nboolean isLogged;\n}\n</code>\n\nThis class will be added to the session when user logs in and removed from the session when user logs out. \nI want its isLogged flag to be changed when user login and logs out. \n\nUsing which listener I can do it?","explaination":"HttpSessionBindingListener notifies an object when it is bounded to or unbounded from http session. The object is notified using HttpSessionBindingEvent object.","options":[{"id":1,"text":"javax.servlet.ServletContextAttributeListener"},{"id":2,"text":"javax.servlet.ServletSessionAttributeListener"},{"id":3,"text":"javax.servlet.http.HttpSessionAttributeListener"},{"id":4,"text":"javax.servlet.http.HttpSessionBindingListener"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":67,"description":"Is the following statement true or false. \n\nURL rewriting may be used when a browser is disabled. In URL encoding the session id is included as part of the URL.","explaination":"","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[1]},{"id":68,"description":"The sendError method defined in the HttpServlet class is equivalent to invoking the setStatus method with the following parameter. Select the one correct answer.","explaination":"","options":[{"id":1,"text":"SC_OK"},{"id":2,"text":"SC_MOVED_TEMPORARILY"},{"id":3,"text":"SC_NOT_FOUND"},{"id":4,"text":"SC_INTERNAL_SERVER_ERROR"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":69,"description":"In the web.xml , session configuration is\n\n<code>\n<session-config>\n<session-timeout>0<session-timeout>\n</session-config>\n</code>\n\nWhat does this means?","explaination":"Value of element <session-timeout> specifies number of minutes after which session will expire. <session-timeout>0</session-timeout> signifies that sessions will not be invalidated by server.","options":[{"id":1,"text":"Session are never invalidated."},{"id":2,"text":"Sessions are never created."},{"id":3,"text":"Session timeout is 0 so sessions never get created."},{"id":4,"text":"None of  these"},{"id":5,"text":""}],"answer":[1]},{"id":70,"description":"In which of the following cases the request.getAttribute() will be helpful?","explaination":"","options":[{"id":1,"text":"If a servlet or jsp is invoked using sendRedirect method."},{"id":2,"text":"If a servlet or jsp is invoked using forward method."},{"id":3,"text":"If a servlet or jsp is invoked using a hyperlink in the page."},{"id":4,"text":"If a servlet or jsp is invoked if when form submits."},{"id":5,"text":"None of these"}],"answer":[2]},{"id":71,"description":"Name the http method used to send resources to the server. Select the one correct answer.","explaination":"PUT method requests that the enclosed entity be stored under the supplied URI. If the URI refers to an already existing resource, it is modified; if the URI does not point to an existing resource, then the server can create the resource with that URI.","options":[{"id":1,"text":"FTP"},{"id":2,"text":"PUT"},{"id":3,"text":"COPY"},{"id":4,"text":"WRITE"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":72,"description":"Name the http method that sends the same response as the request. Select the one correct answer.","explaination":"TRACE echoes back the received request so that a client can see what (if any) changes or additions have been made by intermediate servers.","options":[{"id":1,"text":"TRACE"},{"id":2,"text":"PUT"},{"id":3,"text":"OPTION"},{"id":4,"text":"COPY"},{"id":5,"text":"None of these"}],"answer":[1]},{"id":73,"description":"I have a web application on tomcat. Here many servlets open their own separate connection to database. To optimize this application, I decided to ask all servlet developers to use same db connection. I need to initialize this connection, before any servlet / jsp will be accessed. I got following suggestions from my developers. \n\nWhich is the best way to do it?","explaination":"","options":[{"id":1,"text":"Initialize connection in the servlet itself and save connection"},{"id":2,"text":"Putting the connection in the webapps init parameter"},{"id":3,"text":"Make the connection code in a filter for every servlet and save the connection."},{"id":4,"text":"Make the connection in a context listener and save it."},{"id":5,"text":""}],"answer":[4]},{"id":74,"description":"Which of the following statement is correct.","explaination":"","options":[{"id":1,"text":"The response from the dedicated server to a HEAD request consists of status line, content type and the document."},{"id":2,"text":"The response from the server to a GET request does not contain a document."},{"id":3,"text":"The setStatus method defined in the HttpServletRequest class takes an int as an argument and sets the status of Http response"},{"id":4,"text":"The HttpServletResponse defines constants like SC_NOT_FOUND that may be used as a parameter to setStatus method."},{"id":5,"text":"All of these"}],"answer":[4]},{"id":75,"description":"Which of the following statements are correct about the status of the Http response.","explaination":"Staus code 2xx - This class of status code indicates that the client's request was successfully received, understood, and accepted.\n\nStatus code 3xx - This class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.\n\nStatus code 4xx - The 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.\n\nIf the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server's TCP stack will send a reset packet to the client, which may erase the client's unacknowledged input buffers before they can be read and interpreted by the HTTP application.\n\n\nstatus code 5xx - Response status codes beginning with the digit \"5\" indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.","options":[{"id":1,"text":"A status of 200 to 299 signifies that the request was successful."},{"id":2,"text":"A status of 300 to 399 are informational messages."},{"id":3,"text":"A status of 400 to 499 indicates an error in the server."},{"id":4,"text":"A status of 500 to 599 indicates an error in the client."},{"id":5,"text":"All of these"}],"answer":[1]},{"id":76,"description":"Which HTTP method gets invoked when a user clicks on a link?","explaination":"","options":[{"id":1,"text":"GET"},{"id":2,"text":"POST"},{"id":3,"text":"HEAD"},{"id":4,"text":"PUT"},{"id":5,"text":"LINK"}],"answer":[1]},{"id":77,"description":"Which three digit error codes represent an error in request from client?","explaination":"Status code 4xx - The 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.\n\nIf the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server's TCP stack will send a reset packet to the client, which may erase the client's unacknowledged input buffers before they can be read and interpreted by the HTTP application.\n\n","options":[{"id":1,"text":"Codes starting from 200"},{"id":2,"text":"Codes starting from 300"},{"id":3,"text":"Codes starting from 400"},{"id":4,"text":"Codes starting from 500"},{"id":5,"text":"None of these"}],"answer":[3]},{"id":78,"description":"In a web application, running in a webserver, who is responsible for creating request and response objects?","explaination":"Servlet container does for each HTTP request for a servlet, in general :\n\n- The servlet container loads the servlet class and calls the init method of the servlet as soon as the servlet is called for the first time.\n- Then this container makes an instance of javax.servlet.ServletRequest and javax.servlet.ServletResponse for each request.\n- Then it passes the ServletRequest and ServletResponse objects by invoking the servlet's service method.\nFinally, it calls the destroy method and unload the servlet class when the servlet class is to be shut down.","options":[{"id":1,"text":"Web server"},{"id":2,"text":"Container"},{"id":3,"text":"Client"},{"id":4,"text":"Servlet"},{"id":5,"text":"Browser"}],"answer":[2]},{"id":79,"description":"Name the method defined in the HttpServletResponse class that may be used to set the content type. ","explaination":"setContentType method of HttpServletResponse sets the content type of the response being sent to the client, if the response has not been committed yet. The given content type may include a character encoding specification, for example, text/html;charset=UTF-8. The response's character encoding is only set from the given content type if this method is called before getWriter is called.\n\nThis method may be called repeatedly to change content type and character encoding. This method has no effect if called after the response has been committed. It does not set the response's character encoding if it is called after getWriter has been called or after the response has been committed.\n\nContainers must communicate the content type and the character encoding used for the servlet response's writer to the client if the protocol provides a way for doing so. In the case of HTTP, the Content-Type header is used.","options":[{"id":1,"text":"setType"},{"id":2,"text":"setContent"},{"id":3,"text":"setContentType"},{"id":4,"text":"setResponseContentType"},{"id":5,"text":""}],"answer":[3]},{"id":80,"description":"Which of the following statements are true?","explaination":"","options":[{"id":1,"text":"The Context attributes are thread safe."},{"id":2,"text":"The Servlet instance variables are not thread safe."},{"id":3,"text":"If a servlet is not using \"SingleThreadModel\" then, if n clients access a servlet, there will be instances of the servlet."},{"id":4,"text":"None of these"},{"id":5,"text":"All of these"}],"answer":[2]},{"id":81,"description":"When using HTML forms which of the following is true for POST method?","explaination":"","options":[{"id":1,"text":"POST allows users to bookmark URLs with parameters."},{"id":2,"text":"The POST method should not be used when large amount of data needs to be transferred."},{"id":3,"text":"POST allows secure data transmission over the http method."},{"id":4,"text":"POST method sends data in the body of the request."},{"id":5,"text":"All of these"}],"answer":[4]},{"id":82,"description":"Which of the following is not a valid HTTP/1.1 method?","explaination":"","options":[{"id":1,"text":"CONNECT"},{"id":2,"text":"COMPARE"},{"id":3,"text":"OPTIONS"},{"id":4,"text":"TRACE"},{"id":5,"text":""}],"answer":[2]},{"id":83,"description":"Which of the following method sets application / context init parameter?","explaination":"In order to set application/context init parameter, that can be done through deployment descritor(web.xml) only. <context-param> element can be used to set context parameters.","options":[{"id":1,"text":"setParameter(String name,String value);"},{"id":2,"text":"setParameter(String name,Object value);"},{"id":3,"text":"setParameter(Object name,Object value);"},{"id":4,"text":"Its not possible using method"},{"id":5,"text":""}],"answer":[4]},{"id":84,"description":"The method getWriter returns an object of type PrintWriter. This class has println methods to generate output. Which of these classes define the getWriter method?","explaination":"","options":[{"id":1,"text":"HttpServletRequest"},{"id":2,"text":"HttpServletResponse"},{"id":3,"text":"ServletConfig"},{"id":4,"text":"ServletContext"},{"id":5,"text":""}],"answer":[2]},{"id":85,"description":"Name the class that includes the getSession method that is used to get the HttpSession object.","explaination":"","options":[{"id":1,"text":"HttpServletRequest"},{"id":2,"text":"HttpServletResponse"},{"id":3,"text":"ServletContext"},{"id":4,"text":"ServletConfig"},{"id":5,"text":""}],"answer":[1]},{"id":86,"description":"Given a web application ShoopingCart with 2 files:\n\nShoppingCart/customer/ addProductToCart.jsp\nShoppingCart/customer/ showCart.jsp\n\nwhich of the following code are valid in addProductToCart.jsp to dispatch request to the showCart.jsp?","explaination":"","options":[{"id":1,"text":"RequestDispatcher nextView = request.getRequestDispatcher(\"/customer/showCart.jsp\");"},{"id":2,"text":"RequestDispatcher nextView = request.getRequestDispatcher(\"/showCart.jsp\");"},{"id":3,"text":"RequestDispatcher nextView = getServletContext().request.getRequestDispatcher(\"showCart.jsp\");"},{"id":4,"text":"RequestDispatcher nextView = getServletContext().request.getRequestDispatcher(\"../customer/showCart.jsp\");"},{"id":5,"text":""}],"answer":[1]},{"id":87,"description":"My Application has a servlet, which do addition as shown below and sets the value in context scope. It then prints the result.\n\n<code>\n\npublic void doGet(HttpServletRequest req, HttpServletResponse resp) {\nPrintWriter out=response.getWriter();\nparam_1 = request.getParameter(\"Param1\");\nparam_2 = request.getParameter(\"Param2\");\ngetServletContext.setAttribute(\"result\",(param_1 + param_2));\nresponse.\nout.print(\"Result ==\"+getServletContext.getAttribute(\"result\"));\n}\n\n</code>\n\nBut sometimes I get wrong results.How can I fix it?","explaination":"","options":[{"id":1,"text":"By Putting the \"result\" attribute in session scope."},{"id":2,"text":"By Putting the \"result\" attribute in request scope."},{"id":3,"text":"By Putting the \"result\" attribute in response scope."},{"id":4,"text":"Its not possible by synchronizing methods or blocks."},{"id":5,"text":""}],"answer":[2]},{"id":88,"description":"Which of the following are the methods defined in ServletContextListener interface?","explaination":"ServletContextListener interface is for receiving notification events about ServletContext lifecycle changes.\n\nIn order to receive these notification events, the implementation class must be either declared in the deployment descriptor of the web application, annotated with WebListener, or registered via one of the addListener methods defined on ServletContext.\n\nImplementations of this interface are invoked at their contextInitialized(javax.servlet.ServletContextEvent) method in the order in which they have been declared, and at their contextDestroyed(javax.servlet.ServletContextEvent) method in reverse order.","options":[{"id":1,"text":"public void servletContextDestroyed(ServletContext ctx)"},{"id":2,"text":"public void contextInitialized(ServletContextEvent event)"},{"id":3,"text":"public void servletContextInitialized(ServletContextEvent event)"},{"id":4,"text":"public void contextDestroyed(ServletContextEvent event)"},{"id":5,"text":"public void contextInitEvent(ServletContextEvent event)"}],"answer":[2,4]},{"id":89,"description":"Which HTTP method is used by the client to check what server receives when request is made?","explaination":"TRACE echoes back the received request so that a client can see what (if any) changes or additions have been made by intermediate servers.","options":[{"id":1,"text":"GET"},{"id":2,"text":"TRACE"},{"id":3,"text":"OPTION"},{"id":4,"text":"PUT"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":90,"description":"In the init(ServletConfig) method of Servlet life cycle, what method can be used to access the ServletConfig object?","explaination":"getServletConfig() returns a ServletConfig object, which contains initialization and startup parameters for this servlet. The ServletConfig object returned is the one passed to the init method.\n\nImplementations of this interface are responsible for storing the ServletConfig object so that this method can return it. The GenericServlet class, which implements this interface, already does this.","options":[{"id":1,"text":"getServletInfo()"},{"id":2,"text":"getServletConfig()"},{"id":3,"text":"getConfig()"},{"id":4,"text":"None of these"},{"id":5,"text":""}],"answer":[2]},{"id":91,"description":"Which of the following are correct statements?","explaination":"","options":[{"id":1,"text":"The include method defined in the RequestDispatcher class can be used to access one servlet from another. But it can be invoked only if no output has been sent to the server."},{"id":2,"text":"The getRequestDispatcher(String URL) is defined in both ServletContext and HttpServletRequest method"},{"id":3,"text":"The getNamedDispatcher(String) defined in HttpServletRequest class takes the name of the servlet and returns an object of RequestDispatcher class."},{"id":4,"text":"All of these"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":92,"description":"Which of the following statements are true about setHeader() and addHeader() methods?","explaination":"","options":[{"id":1,"text":"setHeader() sets an existing header, but it will not add any new header"},{"id":2,"text":"addHeader() replaces existing header value if the header already exists."},{"id":3,"text":"addHeader() adds an additional value to an existing header"},{"id":4,"text":"All of these"},{"id":5,"text":""}],"answer":[3]},{"id":93,"description":"The sendRedirect method defined in the HttpServlet class is equivalent to invoking the setStatus method with the following parameter and a Location header in the URL.","explaination":"","options":[{"id":1,"text":"SC_OK"},{"id":2,"text":"SC_NOT_FOUND"},{"id":3,"text":"SC_INTERNAL_SERVER_ERROR"},{"id":4,"text":"SC_MOVED_TEMPORARILY"},{"id":5,"text":""}],"answer":[4]},{"id":94,"description":"ServletContext is unique per servlet. True or False","explaination":"ServletContext is unique per application.","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[2]},{"id":95,"description":"Which one of the following is not appropriate scope for servlet attributes","explaination":"","options":[{"id":1,"text":"Request"},{"id":2,"text":"Response"},{"id":3,"text":"Session"},{"id":4,"text":"Application"},{"id":5,"text":""}],"answer":[2]},{"id":96,"description":"Which of the following method is non-idempotent?","explaination":"An idempotent HTTP method is a HTTP method that can be called many times without different outcomes. It would not matter if the method is called only once, or ten times over. The result should be the same. \n\nFollowing HTTP methods are idempotent; GET, OPTIONS, HEAD, PUT, DELETE","options":[{"id":1,"text":"GET"},{"id":2,"text":"POST"},{"id":3,"text":"TRACE"},{"id":4,"text":"OPTION"},{"id":5,"text":"None of these"}],"answer":[2]},{"id":97,"description":"Every servlet has it’s own ServletConfig object and servlet is responsible for instantiating this object.","explaination":"Every servlet has it’s own ServletConfig object and servlet container is responsible for instantiating this object.","options":[{"id":1,"text":"True"},{"id":2,"text":"False"},{"id":3,"text":""},{"id":4,"text":""},{"id":5,"text":""}],"answer":[2]},{"id":98,"description":"Which one of the following is not appropriate interface to manage servlet attributes.","explaination":"","options":[{"id":1,"text":"ServletRequest"},{"id":2,"text":"ServletContext"},{"id":3,"text":"HttpSession"},{"id":4,"text":"ServletConfig"},{"id":5,"text":"None of these"}],"answer":[4]},{"id":99,"description":"When does a container load a servlet by default?","explaination":"","options":[{"id":1,"text":"When first request is made to server"},{"id":2,"text":"When container starts"},{"id":3,"text":"When application starts"},{"id":4,"text":"None of the above"},{"id":5,"text":""}],"answer":[1]},{"id":100,"description":"Which of the following interface is used for inter-servlet communication.\n","explaination":"","options":[{"id":1,"text":"RequestDispatcher"},{"id":2,"text":"ServletResponse"},{"id":3,"text":"ServletConfig"},{"id":4,"text":"ServletContext"},{"id":5,"text":""}],"answer":[1]}]
